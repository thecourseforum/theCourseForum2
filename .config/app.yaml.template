# Google App Engine Config

runtime: python38

# The --http flag exposes the app with uWSGI only and will act as the router/proxy/load balancer
# If we want an nginx webserver upstream for more features, we would have to use a --socket flag so that nginx can communicate with uWSGI
# More info here: https://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html
entrypoint: uwsgi --http :8080 --module tcf_core.wsgi --master --processes 1 --threads 2

handlers:
# This configures Google App Engine to serve the files in the app's static
# directory.
- url: /static
  static_dir: static/

# This handler routes all requests not caught above to your main app. It is
# required when static routes are defined, but can be omitted (along with
# the entire handlers section) when there are no static files defined.
- url: /.*
  script: auto
  secure: always

env_variables:
    DJANGO_SETTINGS_MODULE: tcf_core.settings.prod
    # Django
    SECRET_KEY: "${SECRET_KEY}"
    DEBUG: 0
    # database
    DB_NAME: "${DB_NAME}"
    DB_USER: "${DB_USER}"
    DB_PASSWORD: "${DB_PASSWORD}"
    DB_HOST: "${DB_HOST}"
    DB_PORT: "${DB_PORT}"
    # social-auth-app-django
    SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: "${SOCIAL_AUTH_GOOGLE_OAUTH2_KEY}"
    SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: "${SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET}"
    # elasticsearch
    ES_COURSE_DOCUMENTS_ENDPOINT: "${ES_COURSE_DOCUMENTS_ENDPOINT}"
    ES_INSTRUCTOR_DOCUMENTS_ENDPOINT: "${ES_INSTRUCTOR_DOCUMENTS_ENDPOINT}"
    ES_PRIVATE_API_KEY: "${ES_PRIVATE_API_KEY}"
    ES_COURSE_SEARCH_ENDPOINT: "${ES_COURSE_SEARCH_ENDPOINT}"
    ES_INSTRUCTOR_SEARCH_ENDPOINT: "${ES_INSTRUCTOR_SEARCH_ENDPOINT}"
    ES_PUBLIC_API_KEY: "${ES_PUBLIC_API_KEY}"
    # discord
    DISCORD_URL_BUG: "${DISCORD_URL_BUG}"
    DISCORD_URL_FEEDBACK: "${DISCORD_URL_FEEDBACK}"
